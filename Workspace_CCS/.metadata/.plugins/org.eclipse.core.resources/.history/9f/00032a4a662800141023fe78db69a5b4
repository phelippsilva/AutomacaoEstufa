/*
 * sd.c
 *
 *  Created on: 20/08/2014
 *      Author: Tiago
 */

void sd() {
	/* Drive number used for FatFs */
#define SD_DRIVE_NUM 0
	/* Tamanho do buffer */
#define CPY_BUFF_SIZE       2048

	SDSPI_Handle sdspiHandle;
	SDSPI_Params sdspiParams;
	FILE *src;
	char bytesRead;

	/* Variáveis ​​para acompanhar o progresso de manipulação de arquivos*/
//	unsigned int bytesRead = 0;
//
//	unsigned char cpy_buff[CPY_BUFF_SIZE + 1];
//
	const Char inputfilesd[] = "fat:0:input.txt";
	printf("Tentando criar o arquivo: %s\n", inputfilesd);
	/* Mount and register the SD Card */
	SDSPI_Params_init(&sdspiParams);
	sdspiHandle = SDSPI_open(Board_SDSPI0, SD_DRIVE_NUM, &sdspiParams);
	if (sdspiHandle == NULL) {
		printf("Erro ao iniciar o SD card!\n");
	} else {
		printf("Drive %u montado!\n", SD_DRIVE_NUM);
	}
	/* Tenta abrir o arquivo */
	src = fopen(inputfilesd, "r");
//	src = fopen(inputfilesd, "w+");
	if (!src) {
		printf("Não foi possivel abrir o arquivo!");
		Task_sleep(10);
		SDSPI_close(sdspiHandle);
		Task_sleep(10);
		Task_exit();
	} else {
		printf("Arquivo criado!");
	}
	while (true) {
		/*  Read from source file */
		bytesRead = fread(cpy_buff, 1, CPY_BUFF_SIZE, src);
		printf("%s", cpy_buff);
		if (bytesRead == 0) {
			break; /* Error or EOF */
		}
	}
	fclose(src);
	SDSPI_close(sdspiHandle);
	printf("paro!");
//	Task_exit();
}


